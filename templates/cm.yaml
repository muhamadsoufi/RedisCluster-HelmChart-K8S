apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-config
  labels:
    app: {{ .Release.Name }}
data:
  redis.conf: |-
    {{ .Values.configMap.redisConf | indent 4 }}
  bootstrap-pod.sh: |-
    #!/bin/sh
    set -ex

    # Find which member of the Stateful Set this pod is running
    # e.g. "redis-cluster-0" -> "0"
    PET_ORDINAL=$(cat /etc/podinfo/pod_name | rev | cut -d- -f1 | rev)
    MY_SHARD=$(($PET_ORDINAL % {{ .Values.replicaCount }}))

    redis-server /conf/redis.conf &

    sleep 1

    if [ $PET_ORDINAL -lt {{ .Values.replicaCount }} ]; then
      NUM_SLOTS=$(( 16384 / {{ .Values.replicaCount }} ))
      REMAINDER=$(( 16384 % {{ .Values.replicaCount }} ))
      START_SLOT=$(( $NUM_SLOTS * $MY_SHARD + ($MY_SHARD < $REMAINDER ? $MY_SHARD : $REMAINDER) ))
      END_SLOT=$(( $NUM_SLOTS * ($MY_SHARD+1) + ($MY_SHARD+1 < $REMAINDER ? $MY_SHARD+1 : $REMAINDER) - 1 ))

      PEER_IP=$(perl -MSocket -e "print inet_ntoa(scalar(gethostbyname('{{ .Release.Name }}-0.{{ .Release.Name }}.svc.cluster.local')))")
      redis-cli cluster meet $PEER_IP 6379
      redis-cli cluster addslots $(seq $START_SLOT $END_SLOT)
    else
      PEER_IP=$(perl -MSocket -e "print inet_ntoa(scalar(gethostbyname('{{ .Release.Name }}-$MY_SHARD.{{ .Release.Name }}.svc.cluster.local')))")
      redis-cli --cluster add-node localhost:6379 $PEER_IP:6379 --cluster-slave
    fi

    wait
